<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>$schema</key>
	<string>https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json</string>
	<key>name</key>
	<string>4D</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>include</key>
			<string>#comments</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#keywords</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#parameters</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#local_variables</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#strings</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#operators</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#boolean_values</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#constant_4d</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#numbers</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#block</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#function-call-innards</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\n</string>
			<key>name</key>
			<string>punctuation.terminator.statement.4d</string>
		</dict>
		<dict>
			<key>match</key>
			<string>;</string>
			<key>name</key>
			<string>punctuation.separator.delimiter.4d</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>([a-zA-Z_][a-zA-Z_0-9]*|(?&lt;=[\]\)]))?(\[)(?!\])</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>variable.object.4d</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.begin.bracket.square.4d</string>
				</dict>
			</dict>
			<key>end</key>
			<string>\]</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.end.bracket.square.4d</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.bracket.square.access.c</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#function-call-innards</string>
				</dict>
			</array>
		</dict>
	</array>
	<key>repository</key>
	<dict>
		<key>block</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?i)\b(for each)\b</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.block.begin.for_each.curly.4d</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?i)\b(end for each)\b</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.block.end.for_each.curly.4d</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.block.4d</string>
				</dict>
			</array>
		</dict>
		<key>boolean_values</key>
		<dict>
			<key>match</key>
			<string>(?i)\b(NULL|true|false)\b</string>
			<key>name</key>
			<string>constant.language.4d</string>
		</dict>
		<key>comments</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>meta.toc-list.banner.block.4d</string>
						</dict>
					</dict>
					<key>match</key>
					<string>^/\** =(\s*.*?)\s*= \**/$\n?</string>
					<key>name</key>
					<string>comment.block.4d</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>/\**</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.comment.begin.4d</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\**/</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.comment.end.4d</string>
						</dict>
					</dict>
					<key>name</key>
					<string>comment.block.4d</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>meta.toc-list.banner.line.4d</string>
						</dict>
					</dict>
					<key>match</key>
					<string>^// =(\s*.*?)\s*=\s*$\n?</string>
					<key>name</key>
					<string>comment.line.banner.4d</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>(^[ \t]+)?(?=//)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.whitespace.comment.leading.4d</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?!\G)</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>begin</key>
							<string>//</string>
							<key>beginCaptures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>punctuation.definition.comment.4d</string>
								</dict>
							</dict>
							<key>end</key>
							<string>(?=\n)</string>
							<key>name</key>
							<string>comment.line.double-slash.4d</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>constant_4d</key>
		<dict>
			<key>match</key>
			<string>(?i)([a-z_0-9 ]*):K[0-9]*:[0-9]*</string>
			<key>name</key>
			<string>constant.numeric.4d</string>
		</dict>
		<key>function-call-innards</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#comments</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#storage_types</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#operators</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?x)
(?!(?:while|for|do|if|else|switch|catch|enumerate|return|typeid|alignof|alignas|sizeof|[cr]?iterate|and|and_eq|bitand|bitor|compl|not|not_eq|or|or_eq|typeid|xor|xor_eq|alignof|alignas)\s*\()
(
(?:[A-Za-z_\s*][A-Za-z0-9_]*+)++  # actual name
|
(?:(?&lt;=operator)(?:[-*&amp;&lt;&gt;=+!]+|\(\)|\[\]))
)
\s*(\()</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>entity.name.function.4d</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.arguments.begin.bracket.round.4d</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\)</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.arguments.end.bracket.round.4d</string>
						</dict>
					</dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#function-call-innards</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#strings</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#numbers</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#parameters</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#local_variables</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#boolean_values</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#constant_4d</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>\(</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.parens.begin.bracket.round.4d</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\)</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.parens.end.bracket.round.4d</string>
						</dict>
					</dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#function-call-innards</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>keywords</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>(?i)\b(C_TEXT|C_BOOLEAN|C_REAL|C_OBJECT|C_POINTER|if|while|else|end if|end for|Begin SQL|End SQL|for each|End for each|while|end while|use|end use|case of|end case|repeat|until|for)\b</string>
					<key>name</key>
					<string>keyword.control.4d</string>
				</dict>
			</array>
		</dict>
		<key>local_variables</key>
		<dict>
			<key>match</key>
			<string>\$[a-zA-Z_0-9 ]*</string>
			<key>name</key>
			<string>variable.local.name.4d</string>
		</dict>
		<key>numbers</key>
		<dict>
			<key>begin</key>
			<string>(?&lt;!\w)(?=\d|\.\d)</string>
			<key>end</key>
			<string>(?!(?:(?:[0-9a-zA-Z_\.]|')|(?&lt;=[eEpP])[+-]))</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other.unit.hexadecimal.4d</string>
						</dict>
						<key>10</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.minus.exponent.hexadecimal.4d</string>
						</dict>
						<key>11</key>
						<dict>
							<key>name</key>
							<string>constant.numeric.exponent.hexadecimal.4d</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>match</key>
									<string>(?&lt;=[0-9a-fA-F])'(?=[0-9a-fA-F])</string>
									<key>name</key>
									<string>punctuation.separator.constant.numeric</string>
								</dict>
							</array>
						</dict>
						<key>12</key>
						<dict>
							<key>name</key>
							<string>keyword.other.unit.suffix.floating-point.4d</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>constant.numeric.hexadecimal.4d</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>match</key>
									<string>(?&lt;=[0-9a-fA-F])'(?=[0-9a-fA-F])</string>
									<key>name</key>
									<string>punctuation.separator.constant.numeric</string>
								</dict>
							</array>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>punctuation.separator.constant.numeric</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>constant.numeric.hexadecimal.4d</string>
						</dict>
						<key>5</key>
						<dict>
							<key>name</key>
							<string>constant.numeric.hexadecimal.4d</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>match</key>
									<string>(?&lt;=[0-9a-fA-F])'(?=[0-9a-fA-F])</string>
									<key>name</key>
									<string>punctuation.separator.constant.numeric</string>
								</dict>
							</array>
						</dict>
						<key>6</key>
						<dict>
							<key>name</key>
							<string>punctuation.separator.constant.numeric</string>
						</dict>
						<key>8</key>
						<dict>
							<key>name</key>
							<string>keyword.other.unit.exponent.hexadecimal.4d</string>
						</dict>
						<key>9</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.plus.exponent.hexadecimal.4d</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(\G0[xX])([0-9a-fA-F](?:[0-9a-fA-F]|((?&lt;=[0-9a-fA-F])'(?=[0-9a-fA-F])))*)?((?:(?&lt;=[0-9a-fA-F])\.|\.(?=[0-9a-fA-F])))([0-9a-fA-F](?:[0-9a-fA-F]|((?&lt;=[0-9a-fA-F])'(?=[0-9a-fA-F])))*)?((?&lt;!')([pP])(\+?)(\-?)((?:[0-9](?:[0-9]|(?:(?&lt;=[0-9a-fA-F])'(?=[0-9a-fA-F])))*)))?([lLfF](?!\w))?(?!(?:(?:[0-9a-zA-Z_\.]|')|(?&lt;=[eEpP])[+-]))</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>10</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.minus.exponent.decimal.4d</string>
						</dict>
						<key>11</key>
						<dict>
							<key>name</key>
							<string>constant.numeric.exponent.decimal.4d</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>match</key>
									<string>(?&lt;=[0-9a-fA-F])'(?=[0-9a-fA-F])</string>
									<key>name</key>
									<string>punctuation.separator.constant.numeric</string>
								</dict>
							</array>
						</dict>
						<key>12</key>
						<dict>
							<key>name</key>
							<string>keyword.other.unit.suffix.floating-point.4d</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>constant.numeric.decimal.4d</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>match</key>
									<string>(?&lt;=[0-9a-fA-F])'(?=[0-9a-fA-F])</string>
									<key>name</key>
									<string>punctuation.separator.constant.numeric</string>
								</dict>
							</array>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>punctuation.separator.constant.numeric</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>constant.numeric.decimal.point.4d</string>
						</dict>
						<key>5</key>
						<dict>
							<key>name</key>
							<string>constant.numeric.decimal.4d</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>match</key>
									<string>(?&lt;=[0-9a-fA-F])'(?=[0-9a-fA-F])</string>
									<key>name</key>
									<string>punctuation.separator.constant.numeric</string>
								</dict>
							</array>
						</dict>
						<key>6</key>
						<dict>
							<key>name</key>
							<string>punctuation.separator.constant.numeric</string>
						</dict>
						<key>8</key>
						<dict>
							<key>name</key>
							<string>keyword.other.unit.exponent.decimal.4d</string>
						</dict>
						<key>9</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.plus.exponent.decimal.4d</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(\G(?=[0-9.])(?!0[xXbB]))([0-9](?:[0-9]|((?&lt;=[0-9a-fA-F])'(?=[0-9a-fA-F])))*)?((?:(?&lt;=[0-9])\.|\.(?=[0-9])))([0-9](?:[0-9]|((?&lt;=[0-9a-fA-F])'(?=[0-9a-fA-F])))*)?((?&lt;!')([eE])(\+?)(\-?)((?:[0-9](?:[0-9]|(?:(?&lt;=[0-9a-fA-F])'(?=[0-9a-fA-F])))*)))?([lLfF](?!\w))?(?!(?:(?:[0-9a-zA-Z_\.]|')|(?&lt;=[eEpP])[+-]))</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other.unit.binary.4d</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>constant.numeric.binary.4d</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>match</key>
									<string>(?&lt;=[0-9a-fA-F])'(?=[0-9a-fA-F])</string>
									<key>name</key>
									<string>punctuation.separator.constant.numeric</string>
								</dict>
							</array>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>punctuation.separator.constant.numeric</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>keyword.other.unit.suffix.integer.4d</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(\G0[bB])([01](?:[01]|((?&lt;=[0-9a-fA-F])'(?=[0-9a-fA-F])))*)((?:(?:(?:(?:(?:[uU]|[uU]ll?)|[uU]LL?)|ll?[uU]?)|LL?[uU]?)|[fF])(?!\w))?(?!(?:(?:[0-9a-zA-Z_\.]|')|(?&lt;=[eEpP])[+-]))</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other.unit.octal.4d</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>constant.numeric.octal.4d</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>match</key>
									<string>(?&lt;=[0-9a-fA-F])'(?=[0-9a-fA-F])</string>
									<key>name</key>
									<string>punctuation.separator.constant.numeric</string>
								</dict>
							</array>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>punctuation.separator.constant.numeric</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>keyword.other.unit.suffix.integer.4d</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(\G0)((?:[0-7]|((?&lt;=[0-9a-fA-F])'(?=[0-9a-fA-F])))+)((?:(?:(?:(?:(?:[uU]|[uU]ll?)|[uU]LL?)|ll?[uU]?)|LL?[uU]?)|[fF])(?!\w))?(?!(?:(?:[0-9a-zA-Z_\.]|')|(?&lt;=[eEpP])[+-]))</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other.unit.hexadecimal.4d</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>constant.numeric.hexadecimal.4d</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>match</key>
									<string>(?&lt;=[0-9a-fA-F])'(?=[0-9a-fA-F])</string>
									<key>name</key>
									<string>punctuation.separator.constant.numeric</string>
								</dict>
							</array>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>punctuation.separator.constant.numeric</string>
						</dict>
						<key>5</key>
						<dict>
							<key>name</key>
							<string>keyword.other.unit.exponent.hexadecimal.4d</string>
						</dict>
						<key>6</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.plus.exponent.hexadecimal.4d</string>
						</dict>
						<key>7</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.minus.exponent.hexadecimal.4d</string>
						</dict>
						<key>8</key>
						<dict>
							<key>name</key>
							<string>constant.numeric.exponent.hexadecimal.4d</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>match</key>
									<string>(?&lt;=[0-9a-fA-F])'(?=[0-9a-fA-F])</string>
									<key>name</key>
									<string>punctuation.separator.constant.numeric</string>
								</dict>
							</array>
						</dict>
						<key>9</key>
						<dict>
							<key>name</key>
							<string>keyword.other.unit.suffix.integer.4d</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(\G0[xX])([0-9a-fA-F](?:[0-9a-fA-F]|((?&lt;=[0-9a-fA-F])'(?=[0-9a-fA-F])))*)((?&lt;!')([pP])(\+?)(\-?)((?:[0-9](?:[0-9]|(?:(?&lt;=[0-9a-fA-F])'(?=[0-9a-fA-F])))*)))?((?:(?:(?:(?:(?:[uU]|[uU]ll?)|[uU]LL?)|ll?[uU]?)|LL?[uU]?)|[fF])(?!\w))?(?!(?:(?:[0-9a-zA-Z_\.]|')|(?&lt;=[eEpP])[+-]))</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>constant.numeric.decimal.4d</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>match</key>
									<string>(?&lt;=[0-9a-fA-F])'(?=[0-9a-fA-F])</string>
									<key>name</key>
									<string>punctuation.separator.constant.numeric</string>
								</dict>
							</array>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>punctuation.separator.constant.numeric</string>
						</dict>
						<key>5</key>
						<dict>
							<key>name</key>
							<string>keyword.other.unit.exponent.decimal.4d</string>
						</dict>
						<key>6</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.plus.exponent.decimal.4d</string>
						</dict>
						<key>7</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.minus.exponent.decimal.4d</string>
						</dict>
						<key>8</key>
						<dict>
							<key>name</key>
							<string>constant.numeric.exponent.decimal.4d</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>match</key>
									<string>(?&lt;=[0-9a-fA-F])'(?=[0-9a-fA-F])</string>
									<key>name</key>
									<string>punctuation.separator.constant.numeric</string>
								</dict>
							</array>
						</dict>
						<key>9</key>
						<dict>
							<key>name</key>
							<string>keyword.other.unit.suffix.integer.4d</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(\G(?=[0-9.])(?!0[xXbB]))([0-9](?:[0-9]|((?&lt;=[0-9a-fA-F])'(?=[0-9a-fA-F])))*)((?&lt;!')([eE])(\+?)(\-?)((?:[0-9](?:[0-9]|(?:(?&lt;=[0-9a-fA-F])'(?=[0-9a-fA-F])))*)))?((?:(?:(?:(?:(?:[uU]|[uU]ll?)|[uU]LL?)|ll?[uU]?)|LL?[uU]?)|[fF])(?!\w))?(?!(?:(?:[0-9a-zA-Z_\.]|')|(?&lt;=[eEpP])[+-]))</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?:(?:[0-9a-zA-Z_\.]|')|(?&lt;=[eEpP])[+-])+</string>
					<key>name</key>
					<string>invalid.illegal.constant.numeric</string>
				</dict>
			</array>
		</dict>
		<key>operators</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>:=</string>
					<key>name</key>
					<string>keyword.operator.assignment.4d</string>
				</dict>
				<dict>
					<key>match</key>
					<string>#|&lt;=|&gt;=|Ò=|&lt;|&gt;</string>
					<key>name</key>
					<string>keyword.operator.comparison.4d</string>
				</dict>
				<dict>
					<key>match</key>
					<string>%|\*|/|-|\+</string>
					<key>name</key>
					<string>keyword.operator.4d</string>
				</dict>
			</array>
		</dict>
		<key>parameters</key>
		<dict>
			<key>match</key>
			<string>\$[0-9]</string>
			<key>name</key>
			<string>variable.parameter.4d</string>
		</dict>
		<key>strings</key>
		<dict>
			<key>begin</key>
			<string>"</string>
			<key>end</key>
			<string>"</string>
			<key>name</key>
			<string>string.quoted.double.4d</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\\.</string>
					<key>name</key>
					<string>constant.character.escape.4d</string>
				</dict>
			</array>
		</dict>
	</dict>
	<key>scopeName</key>
	<string>source.4dm</string>
</dict>
</plist>
